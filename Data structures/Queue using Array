#include <iostream>
#include <cstdlib>

#define SIZE 5

using namespace std;

class queue{
	/*   			
	objective: Create a class to implement Queue(circular) using dynamically created array 
	input parameters: none
	output value: none
	description:  Class definition
	approach: Class definition provides data member and member functions for the Queue class
	*/
	
	int *arr;			// array to store queue elements
	int capacity;			// maximum capacity of the Q
	int front;			// front points to front element in the Q
	int rear;			// rear points to last element in the Q
	int count;			// current size of the Q

	public:

		queue();			// constructor
		~queue();	
		void dequeue();
		void enqueue(int);
		int peek();  				// returns front element
		int size();				// returns current size of Q
		bool isEmpty();
		bool isFull();
		void display();

};

queue::queue(){
	capacity = SIZE;
	arr = new int [capacity];
	front = rear = -1;
	count = 0;
}

queue::~queue(){
	delete [] arr;
}

bool queue::isEmpty(){
	if(front==-1&&rear==-1)
		return true;
	else
		return false;
}

bool queue::isFull(){
	if(front==0 && rear==capacity-1){
		return true;
		//cout<<"isfull";	
	}
	else if(front==rear+1)
		return true;
		
	else 
		return false;
}

void queue::enqueue(int el){
	if(isEmpty()){
		front=rear=0;
		arr[front] = el;
		count+=1;
		//cout<<"in is empty";
	}
	else if(isFull()){
		cout<<"Queue is Full!\n";
		return;
	}
	else{
		//cout<<"in else";
		arr[++rear] = el;
		count+=1;
	}
}

void queue::dequeue(){
	if (isEmpty()){
		cout<<"Queue is Empty!\n";
		return;
	}
	else if(front==rear){
		front = rear = -1;
		count--;
		return;
	}
	else{
		front = front+1;
		count=count-1;
		return;
	}
}

int queue::peek(){
	if(isEmpty()){
		cout<<"Queue is empty!";
		return 0;	
	}
	else	
	return arr[front];
}

int queue::size(){
	return count;
}

void queue::display(){
	int fr = front;
	int rr = rear;
	if(isEmpty()){
		cout<<"Queue is Empty\n";
		return;
	}
	else
	if(fr<=rr){
		while(fr!=rr){
			cout<<"\n"<<arr[fr++];
		}
		cout<<"\n"<<arr[fr++];
		return;
	}
	else{
		for(int i = fr;fr<capacity-1;i++)
			cout<<"\n"<<arr[i];
		for(int i = 0;i<=rr;i++)
			cout<<"\n"<<arr[i];
			
		return;
	}
}

int main(){
	
	queue q;
	
	int ele;
	int choice=0;
	char ch;
	
	while(true)
	{
		cout<<"\n-----------MENU-------------";
		cout<<"\n(1) Enqueue";
		cout<<"\n(2) Dequeue";
		cout<<"\n(3) Display";
	 	cout<<"\n(4) Peek";
	 	cout<<"\n(5) Size";
	 	cout<<"\n(6) Exit";
		cout<<"\nEnter your choice :";
		
		cin>>choice;
		
	switch(choice)
	{
		case 1 :
					cout<<"\nEnter the element : ";
					cin>>ele;
					q.enqueue(ele);
				break;
		case 2 :
					cout<<"\nElement Dequeued!";
					q.dequeue();
				 	break;
		case 3 :
				q.display();
				break;
		case 4 :	
				cout<<"\nFront element in the queue:\t"<<q.peek(); 
				break;
		case 5:
				cout<<"\nSize of the queue:\t"<<q.size();
				break;
		case 6:	q.~queue();
				exit(0);
		default : 
				cout<<"\nSorry!!  You have entered a wrong choice..!\n";
	} 
	}
	return 0 ;
	
	
}



